{"ast":null,"code":"var _s = $RefreshSig$();\n// pages/LoginPage.js\nimport React, { useState } from 'react';\nimport { authAPI } from '../services/authAPI';\nimport '../styles/LoginPage.css';\nconst LoginPage = ({\n  onLoginSuccess\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    try {\n      // Validate username format\n      const usernameRegex = /^(AG|SP|AD)(00[1-9]|0[1-9]\\d|[1-9]\\d{2})$/;\n      if (!usernameRegex.test(username)) {\n        setError('Invalid username format. Use AGxxx, SPxxx, or ADxxx');\n        setLoading(false);\n        return;\n      }\n\n      // Login\n      const result = await authAPI.login(username);\n\n      // Check if user is Admin\n      if (result.user.role !== 'Admin') {\n        setError('Access denied. Admin role required.');\n        authAPI.logout();\n        setLoading(false);\n        return;\n      }\n\n      // Success - redirect to user management\n      onLoginSuccess();\n    } catch (err) {\n      setError(err.message || 'Login failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement('div', {\n    className: 'login-container'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'login-box'\n  }, /*#__PURE__*/React.createElement('h1', {\n    className: 'login-title'\n  }, '🔐 Admin Panel'), /*#__PURE__*/React.createElement('p', {\n    className: 'login-subtitle'\n  }, 'User Management System'), /*#__PURE__*/React.createElement('form', {\n    onSubmit: handleSubmit,\n    className: 'login-form'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'form-group'\n  }, /*#__PURE__*/React.createElement('label', {\n    htmlFor: 'username'\n  }, 'Admin Username'), /*#__PURE__*/React.createElement('input', {\n    type: 'text',\n    id: 'username',\n    value: username,\n    onChange: e => setUsername(e.target.value.toUpperCase()),\n    placeholder: 'AD001',\n    required: true,\n    autoFocus: true,\n    className: error ? 'error' : ''\n  }), /*#__PURE__*/React.createElement('small', {\n    className: 'hint'\n  }, 'Format: AD001-AD999')), error && /*#__PURE__*/React.createElement('div', {\n    className: 'alert alert-error'\n  }, error), /*#__PURE__*/React.createElement('button', {\n    type: 'submit',\n    className: 'btn btn-primary',\n    disabled: loading\n  }, loading ? 'Logging in...' : 'Login')), /*#__PURE__*/React.createElement('div', {\n    className: 'login-footer'\n  }, /*#__PURE__*/React.createElement('p', null, '💡 Test Accounts:'), /*#__PURE__*/React.createElement('ul', null, /*#__PURE__*/React.createElement('li', null, 'AD001 - Admin One'), /*#__PURE__*/React.createElement('li', null, 'AD002 - Admin Two')))));\n};\n_s(LoginPage, \"viTscxNIklwNQqGk9L/hd/5+9yA=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","authAPI","LoginPage","onLoginSuccess","_s","username","setUsername","error","setError","loading","setLoading","handleSubmit","e","preventDefault","usernameRegex","test","result","login","user","role","logout","err","message","createElement","className","onSubmit","htmlFor","type","id","value","onChange","target","toUpperCase","placeholder","required","autoFocus","disabled","_c","$RefreshReg$"],"sources":["/home/panuwat/class/engse203/engse203-backend-teams/agent-wallboard-system/admin-panel/src/pages/LoginPage.js"],"sourcesContent":["// pages/LoginPage.js\nimport React, { useState } from 'react';\nimport { authAPI } from '../services/authAPI';\nimport '../styles/LoginPage.css';\n\nconst LoginPage = ({ onLoginSuccess }) => {\n  const [username, setUsername] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n\n    try {\n      // Validate username format\n      const usernameRegex = /^(AG|SP|AD)(00[1-9]|0[1-9]\\d|[1-9]\\d{2})$/;\n      if (!usernameRegex.test(username)) {\n        setError('Invalid username format. Use AGxxx, SPxxx, or ADxxx');\n        setLoading(false);\n        return;\n      }\n\n      // Login\n      const result = await authAPI.login(username);\n\n      // Check if user is Admin\n      if (result.user.role !== 'Admin') {\n        setError('Access denied. Admin role required.');\n        authAPI.logout();\n        setLoading(false);\n        return;\n      }\n\n      // Success - redirect to user management\n      onLoginSuccess();\n    } catch (err) {\n      setError(err.message || 'Login failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return React.createElement('div', { className: 'login-container' },\n    React.createElement('div', { className: 'login-box' },\n      React.createElement('h1', { className: 'login-title' }, \n        '🔐 Admin Panel'\n      ),\n      React.createElement('p', { className: 'login-subtitle' },\n        'User Management System'\n      ),\n\n      React.createElement('form', { onSubmit: handleSubmit, className: 'login-form' },\n        React.createElement('div', { className: 'form-group' },\n          React.createElement('label', { htmlFor: 'username' }, 'Admin Username'),\n          React.createElement('input', {\n            type: 'text',\n            id: 'username',\n            value: username,\n            onChange: (e) => setUsername(e.target.value.toUpperCase()),\n            placeholder: 'AD001',\n            required: true,\n            autoFocus: true,\n            className: error ? 'error' : ''\n          }),\n          React.createElement('small', { className: 'hint' },\n            'Format: AD001-AD999'\n          )\n        ),\n\n        error && React.createElement('div', { className: 'alert alert-error' }, error),\n\n        React.createElement('button', {\n          type: 'submit',\n          className: 'btn btn-primary',\n          disabled: loading\n        }, loading ? 'Logging in...' : 'Login')\n      ),\n\n      React.createElement('div', { className: 'login-footer' },\n        React.createElement('p', null, '💡 Test Accounts:'),\n        React.createElement('ul', null,\n          React.createElement('li', null, 'AD001 - Admin One'),\n          React.createElement('li', null, 'AD002 - Admin Two')\n        )\n      )\n    )\n  );\n};\n\nexport default LoginPage;"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,OAAO,yBAAyB;AAEhC,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBL,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF;MACA,MAAMI,aAAa,GAAG,2CAA2C;MACjE,IAAI,CAACA,aAAa,CAACC,IAAI,CAACV,QAAQ,CAAC,EAAE;QACjCG,QAAQ,CAAC,qDAAqD,CAAC;QAC/DE,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;;MAEA;MACA,MAAMM,MAAM,GAAG,MAAMf,OAAO,CAACgB,KAAK,CAACZ,QAAQ,CAAC;;MAE5C;MACA,IAAIW,MAAM,CAACE,IAAI,CAACC,IAAI,KAAK,OAAO,EAAE;QAChCX,QAAQ,CAAC,qCAAqC,CAAC;QAC/CP,OAAO,CAACmB,MAAM,CAAC,CAAC;QAChBV,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;;MAEA;MACAP,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOkB,GAAG,EAAE;MACZb,QAAQ,CAACa,GAAG,CAACC,OAAO,IAAI,cAAc,CAAC;IACzC,CAAC,SAAS;MACRZ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBAAOX,KAAK,CAACwB,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAkB,CAAC,eAChEzB,KAAK,CAACwB,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAY,CAAC,eACnDzB,KAAK,CAACwB,aAAa,CAAC,IAAI,EAAE;IAAEC,SAAS,EAAE;EAAc,CAAC,EACpD,gBACF,CAAC,eACDzB,KAAK,CAACwB,aAAa,CAAC,GAAG,EAAE;IAAEC,SAAS,EAAE;EAAiB,CAAC,EACtD,wBACF,CAAC,eAEDzB,KAAK,CAACwB,aAAa,CAAC,MAAM,EAAE;IAAEE,QAAQ,EAAEd,YAAY;IAAEa,SAAS,EAAE;EAAa,CAAC,eAC7EzB,KAAK,CAACwB,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAa,CAAC,eACpDzB,KAAK,CAACwB,aAAa,CAAC,OAAO,EAAE;IAAEG,OAAO,EAAE;EAAW,CAAC,EAAE,gBAAgB,CAAC,eACvE3B,KAAK,CAACwB,aAAa,CAAC,OAAO,EAAE;IAC3BI,IAAI,EAAE,MAAM;IACZC,EAAE,EAAE,UAAU;IACdC,KAAK,EAAExB,QAAQ;IACfyB,QAAQ,EAAGlB,CAAC,IAAKN,WAAW,CAACM,CAAC,CAACmB,MAAM,CAACF,KAAK,CAACG,WAAW,CAAC,CAAC,CAAC;IAC1DC,WAAW,EAAE,OAAO;IACpBC,QAAQ,EAAE,IAAI;IACdC,SAAS,EAAE,IAAI;IACfX,SAAS,EAAEjB,KAAK,GAAG,OAAO,GAAG;EAC/B,CAAC,CAAC,eACFR,KAAK,CAACwB,aAAa,CAAC,OAAO,EAAE;IAAEC,SAAS,EAAE;EAAO,CAAC,EAChD,qBACF,CACF,CAAC,EAEDjB,KAAK,iBAAIR,KAAK,CAACwB,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAoB,CAAC,EAAEjB,KAAK,CAAC,eAE9ER,KAAK,CAACwB,aAAa,CAAC,QAAQ,EAAE;IAC5BI,IAAI,EAAE,QAAQ;IACdH,SAAS,EAAE,iBAAiB;IAC5BY,QAAQ,EAAE3B;EACZ,CAAC,EAAEA,OAAO,GAAG,eAAe,GAAG,OAAO,CACxC,CAAC,eAEDV,KAAK,CAACwB,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAe,CAAC,eACtDzB,KAAK,CAACwB,aAAa,CAAC,GAAG,EAAE,IAAI,EAAE,mBAAmB,CAAC,eACnDxB,KAAK,CAACwB,aAAa,CAAC,IAAI,EAAE,IAAI,eAC5BxB,KAAK,CAACwB,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,mBAAmB,CAAC,eACpDxB,KAAK,CAACwB,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,mBAAmB,CACrD,CACF,CACF,CACF,CAAC;AACH,CAAC;AAACnB,EAAA,CApFIF,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AAsFf,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}