{"ast":null,"code":"// services/userAPI.js\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\n/**\r\n * üÜï Helper function for error handling\r\n */\nconst handleAPIError = error => {\n  if (error.message === 'Failed to fetch') {\n    throw new Error('Network error. Please check your internet connection.');\n  }\n  throw error;\n};\n\n/**\r\n * User API Service\r\n * ‡πÉ‡∏´‡πâ 75% - ‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏° updateUser ‡πÅ‡∏•‡∏∞ deleteUser (25%)\r\n */\nexport const userAPI = {\n  /**\r\n   * Get all users\r\n   */\n  getAllUsers: async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/users`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      // üÜï Handle authentication errors\n      if (response.status === 401) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        window.location.href = '/';\n        throw new Error('Session expired. Please login again.');\n      }\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      return data.data; // Return the users array\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      handleAPIError(error);\n    }\n  },\n  /**\r\n   * Get user by ID\r\n   */\n  getUserById: async userId => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      return data.data;\n    } catch (error) {\n      console.error('Error fetching user:', error);\n      handleAPIError(error);\n    }\n  },\n  /**\r\n   * Create new user\r\n   */\n  createUser: async userData => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/users`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to create user');\n      }\n      const data = await response.json();\n      return data.data;\n    } catch (error) {\n      console.error('Error creating user:', error);\n      handleAPIError(error);\n    }\n  },\n  /**\r\n   * Update user\r\n   * TODO: ‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô implementation (15%)\r\n   * \r\n   * üìù INSTRUCTIONS:\r\n   * 1. ‡∏™‡πà‡∏á PUT request ‡πÑ‡∏õ‡∏ó‡∏µ‡πà `${API_BASE_URL}/users/${userId}`\r\n   * 2. Headers ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ:\r\n   *    - 'Content-Type': 'application/json'\r\n   *    - 'Authorization': Bearer token\r\n   * 3. Body: JSON.stringify(userData)\r\n   * 4. Handle errors ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô createUser\r\n   * 5. Return data.data\r\n   * \r\n   * üí° HINT: Copy ‡∏à‡∏≤‡∏Å createUser ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô method ‡πÅ‡∏•‡∏∞ URL\r\n   */\n  updateUser: async (userId, userData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to update user');\n      }\n      const data = await response.json();\n      return data.data;\n    } catch (error) {\n      console.error('Error updating user:', error);\n      handleAPIError(error);\n    }\n  },\n  /**\r\n   * Delete user\r\n   * TODO: ‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô implementation (10%)\r\n   * \r\n   * üìù INSTRUCTIONS:\r\n   * 1. ‡∏™‡πà‡∏á DELETE request ‡πÑ‡∏õ‡∏ó‡∏µ‡πà `${API_BASE_URL}/users/${userId}`\r\n   * 2. Headers ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ Authorization\r\n   * 3. ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ body\r\n   * 4. Handle errors\r\n   * 5. Return success: true\r\n   */\n  deleteUser: async userId => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to delete user');\n      }\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Error deleting user:', error);\n      handleAPIError(error);\n    }\n  }\n};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","handleAPIError","error","message","Error","userAPI","getAllUsers","response","fetch","method","headers","localStorage","getItem","status","removeItem","window","location","href","ok","errorData","json","data","console","getUserById","userId","createUser","userData","body","JSON","stringify","updateUser","deleteUser","success"],"sources":["/home/panuwat/class/engse203/engse203-backend-teams/agent-wallboard-system/admin-panel/src/services/userAPI.js"],"sourcesContent":["// services/userAPI.js\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\r\n\r\n/**\r\n * üÜï Helper function for error handling\r\n */\r\nconst handleAPIError = (error) => {\r\n    if (error.message === 'Failed to fetch') {\r\n        throw new Error('Network error. Please check your internet connection.');\r\n    }\r\n    throw error;\r\n};\r\n\r\n/**\r\n * User API Service\r\n * ‡πÉ‡∏´‡πâ 75% - ‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏° updateUser ‡πÅ‡∏•‡∏∞ deleteUser (25%)\r\n */\r\nexport const userAPI = {\r\n    /**\r\n     * Get all users\r\n     */\r\n    getAllUsers: async () => {\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/users`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n\r\n            // üÜï Handle authentication errors\r\n            if (response.status === 401) {\r\n                localStorage.removeItem('token');\r\n                localStorage.removeItem('user');\r\n                window.location.href = '/';\r\n                throw new Error('Session expired. Please login again.');\r\n            }\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data.data; // Return the users array\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n            handleAPIError(error);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Get user by ID\r\n     */\r\n    getUserById: async (userId) => {\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data.data;\r\n        } catch (error) {\r\n            console.error('Error fetching user:', error);\r\n            handleAPIError(error);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Create new user\r\n     */\r\n    createUser: async (userData) => {\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/users`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                },\r\n                body: JSON.stringify(userData)\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || 'Failed to create user');\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data.data;\r\n        } catch (error) {\r\n            console.error('Error creating user:', error);\r\n            handleAPIError(error);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Update user\r\n     * TODO: ‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô implementation (15%)\r\n     * \r\n     * üìù INSTRUCTIONS:\r\n     * 1. ‡∏™‡πà‡∏á PUT request ‡πÑ‡∏õ‡∏ó‡∏µ‡πà `${API_BASE_URL}/users/${userId}`\r\n     * 2. Headers ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ:\r\n     *    - 'Content-Type': 'application/json'\r\n     *    - 'Authorization': Bearer token\r\n     * 3. Body: JSON.stringify(userData)\r\n     * 4. Handle errors ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô createUser\r\n     * 5. Return data.data\r\n     * \r\n     * üí° HINT: Copy ‡∏à‡∏≤‡∏Å createUser ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô method ‡πÅ‡∏•‡∏∞ URL\r\n     */\r\n    updateUser: async (userId, userData) => {\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                },\r\n                body: JSON.stringify(userData)\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || 'Failed to update user');\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data.data;\r\n        } catch (error) {\r\n            console.error('Error updating user:', error);\r\n            handleAPIError(error);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Delete user\r\n     * TODO: ‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô implementation (10%)\r\n     * \r\n     * üìù INSTRUCTIONS:\r\n     * 1. ‡∏™‡πà‡∏á DELETE request ‡πÑ‡∏õ‡∏ó‡∏µ‡πà `${API_BASE_URL}/users/${userId}`\r\n     * 2. Headers ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ Authorization\r\n     * 3. ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ body\r\n     * 4. Handle errors\r\n     * 5. Return success: true\r\n     */\r\n    deleteUser: async (userId) => {\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.message || 'Failed to delete user');\r\n            }\r\n\r\n            return { success: true };\r\n        } catch (error) {\r\n            console.error('Error deleting user:', error);\r\n            handleAPIError(error);\r\n        }\r\n    }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}