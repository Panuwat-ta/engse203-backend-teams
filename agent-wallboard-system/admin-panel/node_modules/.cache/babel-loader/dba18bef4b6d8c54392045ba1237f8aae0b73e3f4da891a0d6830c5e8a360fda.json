{"ast":null,"code":"// services/userAPI.js\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\n/**\n * 🆕 Helper function for error handling\n */\nconst handleAPIError = error => {\n  if (error.message === 'Failed to fetch') {\n    throw new Error('Network error. Please check your internet connection.');\n  }\n  throw error;\n};\n\n/**\n * User API Service\n * ให้ 75% - นักศึกษาเพิ่ม updateUser และ deleteUser (25%)\n */\nexport const userAPI = {\n  /**\n   * Get all users\n   */\n  getAllUsers: async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/users`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      // 🆕 Handle authentication errors\n      if (response.status === 401) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        window.location.href = '/';\n        throw new Error('Session expired. Please login again.');\n      }\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      return data.data; // Return the users array\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      handleAPIError(error);\n    }\n  },\n  /**\n   * Get user by ID\n   */\n  getUserById: async userId => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      return data.data;\n    } catch (error) {\n      console.error('Error fetching user:', error);\n      handleAPIError(error);\n    }\n  },\n  /**\n   * Create new user\n   */\n  createUser: async userData => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/users`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to create user');\n      }\n      const data = await response.json();\n      return data.data;\n    } catch (error) {\n      console.error('Error creating user:', error);\n      handleAPIError(error);\n    }\n  },\n  /**\n   * Update user\n   * TODO: นักศึกษาเขียน implementation (15%)\n   * \n   * 📝 INSTRUCTIONS:\n   * 1. ส่ง PUT request ไปที่ `${API_BASE_URL}/users/${userId}`\n   * 2. Headers ต้องมี:\n   *    - 'Content-Type': 'application/json'\n   *    - 'Authorization': Bearer token\n   * 3. Body: JSON.stringify(userData)\n   * 4. Handle errors เหมือน createUser\n   * 5. Return data.data\n   * \n   * 💡 HINT: Copy จาก createUser แล้วเปลี่ยน method และ URL\n   */\n  updateUser: async (userId, userData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to update user');\n      }\n      const data = await response.json();\n      return data.data;\n    } catch (error) {\n      console.error('Error updating user:', error);\n      handleAPIError(error);\n    }\n  },\n  /**\n   * Delete user\n   * TODO: นักศึกษาเขียน implementation (10%)\n   * \n   * 📝 INSTRUCTIONS:\n   * 1. ส่ง DELETE request ไปที่ `${API_BASE_URL}/users/${userId}`\n   * 2. Headers ต้องมี Authorization\n   * 3. ไม่ต้องมี body\n   * 4. Handle errors\n   * 5. Return success: true\n   */\n  deleteUser: async userId => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to delete user');\n      }\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Error deleting user:', error);\n      handleAPIError(error);\n    }\n  }\n};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","handleAPIError","error","message","Error","userAPI","getAllUsers","response","fetch","method","headers","localStorage","getItem","status","removeItem","window","location","href","ok","errorData","json","data","console","getUserById","userId","createUser","userData","body","JSON","stringify","updateUser","deleteUser","success"],"sources":["/home/panuwat/class/engse203/engse203-backend-teams/agent-wallboard-system/admin-panel/src/services/userAPI.js"],"sourcesContent":["// services/userAPI.js\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\n/**\n * 🆕 Helper function for error handling\n */\nconst handleAPIError = (error) => {\n    if (error.message === 'Failed to fetch') {\n        throw new Error('Network error. Please check your internet connection.');\n    }\n    throw error;\n};\n\n/**\n * User API Service\n * ให้ 75% - นักศึกษาเพิ่ม updateUser และ deleteUser (25%)\n */\nexport const userAPI = {\n    /**\n     * Get all users\n     */\n    getAllUsers: async () => {\n        try {\n            const response = await fetch(`${API_BASE_URL}/users`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                }\n            });\n\n            // 🆕 Handle authentication errors\n            if (response.status === 401) {\n                localStorage.removeItem('token');\n                localStorage.removeItem('user');\n                window.location.href = '/';\n                throw new Error('Session expired. Please login again.');\n            }\n\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n            }\n\n            const data = await response.json();\n            return data.data; // Return the users array\n        } catch (error) {\n            console.error('Error fetching users:', error);\n            handleAPIError(error);\n        }\n    },\n\n    /**\n     * Get user by ID\n     */\n    getUserById: async (userId) => {\n        try {\n            const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                }\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n            }\n\n            const data = await response.json();\n            return data.data;\n        } catch (error) {\n            console.error('Error fetching user:', error);\n            handleAPIError(error);\n        }\n    },\n\n    /**\n     * Create new user\n     */\n    createUser: async (userData) => {\n        try {\n            const response = await fetch(`${API_BASE_URL}/users`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                },\n                body: JSON.stringify(userData)\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.message || 'Failed to create user');\n            }\n\n            const data = await response.json();\n            return data.data;\n        } catch (error) {\n            console.error('Error creating user:', error);\n            handleAPIError(error);\n        }\n    },\n\n    /**\n     * Update user\n     * TODO: นักศึกษาเขียน implementation (15%)\n     * \n     * 📝 INSTRUCTIONS:\n     * 1. ส่ง PUT request ไปที่ `${API_BASE_URL}/users/${userId}`\n     * 2. Headers ต้องมี:\n     *    - 'Content-Type': 'application/json'\n     *    - 'Authorization': Bearer token\n     * 3. Body: JSON.stringify(userData)\n     * 4. Handle errors เหมือน createUser\n     * 5. Return data.data\n     * \n     * 💡 HINT: Copy จาก createUser แล้วเปลี่ยน method และ URL\n     */\n    updateUser: async (userId, userData) => {\n        try {\n            const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                },\n                body: JSON.stringify(userData)\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.message || 'Failed to update user');\n            }\n\n            const data = await response.json();\n            return data.data;\n        } catch (error) {\n            console.error('Error updating user:', error);\n            handleAPIError(error);\n        }\n    },\n\n    /**\n     * Delete user\n     * TODO: นักศึกษาเขียน implementation (10%)\n     * \n     * 📝 INSTRUCTIONS:\n     * 1. ส่ง DELETE request ไปที่ `${API_BASE_URL}/users/${userId}`\n     * 2. Headers ต้องมี Authorization\n     * 3. ไม่ต้องมี body\n     * 4. Handle errors\n     * 5. Return success: true\n     */\n    deleteUser: async (userId) => {\n        try {\n            const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\n                method: 'DELETE',\n                headers: {\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                }\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.message || 'Failed to delete user');\n            }\n\n            return { success: true };\n        } catch (error) {\n            console.error('Error deleting user:', error);\n            handleAPIError(error);\n        }\n    }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}