{"ast":null,"code":"var _s = $RefreshSig$();\n// pages/UserManagementPage.js\nimport React, { useState, useEffect } from 'react';\nimport UserTable from '../components/UserTable';\nimport UserFormModal from '../components/UserFormModal';\nimport { userAPI } from '../services/userAPI';\nimport { authAPI } from '../services/authAPI';\nimport '../styles/UserManagementPage.css';\nconst UserManagementPage = ({\n  onLogout\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const currentUser = authAPI.getCurrentUser();\n\n  // Load users on component mount\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  // 🆕 Auto-clear success message after 3 seconds\n  useEffect(() => {\n    if (successMessage) {\n      const timer = setTimeout(() => {\n        setSuccessMessage('');\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [successMessage]);\n  const loadUsers = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const data = await userAPI.getAllUsers();\n      setUsers(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCreateUser = () => {\n    setSelectedUser(null);\n    setIsModalOpen(true);\n  };\n  const handleEditUser = user => {\n    setSelectedUser(user);\n    setIsModalOpen(true);\n  };\n\n  /**\r\n   * TODO: นักศึกษาเขียน handleDeleteUser function (10%)\r\n   * \r\n   * 📝 INSTRUCTIONS:\r\n   * 1. แสดง confirmation dialog\r\n   *    - ใช้ window.confirm(`Are you sure you want to delete user \"${user.username}\"?`)\r\n   * 2. ถ้า user confirm (true):\r\n   *    - try { ... } catch { ... }\r\n   *    - เรียก await userAPI.deleteUser(userId)\r\n   *    - setSuccessMessage('User deleted successfully')\r\n   *    - await loadUsers() เพื่อ refresh list\r\n   * 3. ถ้า error:\r\n   *    - setError(err.message)\r\n   */\n  const handleDeleteUser = async userId => {\n    const user = users.find(u => u.id === userId);\n    if (!user) return;\n    const confirmed = window.confirm(`Are you sure you want to delete user \"${user.username}\"?`);\n    if (!confirmed) return;\n    try {\n      await userAPI.deleteUser(userId);\n      setSuccessMessage('User deleted successfully');\n      await loadUsers();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  console.log(\"🧩 Sending update:\", editedUser);\n  const handleSaveUser = async userData => {\n    try {\n      if (selectedUser) {\n        // Edit mode\n        await userAPI.updateUser(selectedUser.id, userData);\n        setSuccessMessage('User updated successfully');\n      } else {\n        // Create mode\n        await userAPI.createUser(userData);\n        setSuccessMessage('User created successfully');\n      }\n      setIsModalOpen(false);\n      await loadUsers();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/React.createElement('div', {\n    className: 'user-management-page'\n  },\n  /*#__PURE__*/\n  // Header\n  React.createElement('div', {\n    className: 'page-header'\n  }, /*#__PURE__*/React.createElement('div', null, /*#__PURE__*/React.createElement('h1', null, '👥 User Management'), /*#__PURE__*/React.createElement('p', {\n    className: 'page-subtitle'\n  }, `Logged in as: ${currentUser === null || currentUser === void 0 ? void 0 : currentUser.fullName} (${currentUser === null || currentUser === void 0 ? void 0 : currentUser.username})`)), /*#__PURE__*/React.createElement('div', {\n    className: 'header-actions'\n  }, /*#__PURE__*/React.createElement('button', {\n    className: 'btn btn-primary',\n    onClick: handleCreateUser\n  }, '+ Add New User'), /*#__PURE__*/React.createElement('button', {\n    className: 'btn btn-secondary',\n    onClick: onLogout\n  }, '🚪 Logout'))),\n  // Success message\n  successMessage && /*#__PURE__*/React.createElement('div', {\n    className: 'alert alert-success'\n  }, successMessage),\n  // Error message\n  error && /*#__PURE__*/React.createElement('div', {\n    className: 'alert alert-error'\n  }, error),\n  // Loading state\n  loading ? /*#__PURE__*/React.createElement('div', {\n    className: 'loading'\n  }, '⏳ Loading users...') :\n  /*#__PURE__*/\n  // User table\n  React.createElement(UserTable, {\n    users: users,\n    onEdit: handleEditUser,\n    onDelete: handleDeleteUser\n  }),\n  // User form modal\n  isModalOpen && /*#__PURE__*/React.createElement(UserFormModal, {\n    user: selectedUser,\n    onClose: () => setIsModalOpen(false),\n    onSave: handleSaveUser\n  }));\n};\n_s(UserManagementPage, \"Su+ZMPDNriUXbncE7bkQXIZiaBY=\");\n_c = UserManagementPage;\nexport default UserManagementPage;\nvar _c;\n$RefreshReg$(_c, \"UserManagementPage\");","map":{"version":3,"names":["React","useState","useEffect","UserTable","UserFormModal","userAPI","authAPI","UserManagementPage","onLogout","_s","users","setUsers","loading","setLoading","error","setError","selectedUser","setSelectedUser","isModalOpen","setIsModalOpen","successMessage","setSuccessMessage","currentUser","getCurrentUser","loadUsers","timer","setTimeout","clearTimeout","data","getAllUsers","err","message","handleCreateUser","handleEditUser","user","handleDeleteUser","userId","find","u","id","confirmed","window","confirm","username","deleteUser","console","log","editedUser","handleSaveUser","userData","updateUser","createUser","createElement","className","fullName","onClick","onEdit","onDelete","onClose","onSave","_c","$RefreshReg$"],"sources":["/home/panuwat/class/engse203/engse203-backend-teams/agent-wallboard-system/admin-panel/src/pages/UserManagementPage.js"],"sourcesContent":["// pages/UserManagementPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport UserTable from '../components/UserTable';\r\nimport UserFormModal from '../components/UserFormModal';\r\nimport { userAPI } from '../services/userAPI';\r\nimport { authAPI } from '../services/authAPI';\r\nimport '../styles/UserManagementPage.css';\r\n\r\nconst UserManagementPage = ({ onLogout }) => {\r\n    const [users, setUsers] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    const currentUser = authAPI.getCurrentUser();\r\n\r\n    // Load users on component mount\r\n    useEffect(() => {\r\n        loadUsers();\r\n    }, []);\r\n\r\n    // 🆕 Auto-clear success message after 3 seconds\r\n    useEffect(() => {\r\n        if (successMessage) {\r\n            const timer = setTimeout(() => {\r\n                setSuccessMessage('');\r\n            }, 3000);\r\n\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [successMessage]);\r\n\r\n    const loadUsers = async () => {\r\n        setLoading(true);\r\n        setError(null);\r\n        try {\r\n            const data = await userAPI.getAllUsers();\r\n            setUsers(data);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleCreateUser = () => {\r\n        setSelectedUser(null);\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const handleEditUser = (user) => {\r\n        setSelectedUser(user);\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    /**\r\n     * TODO: นักศึกษาเขียน handleDeleteUser function (10%)\r\n     * \r\n     * 📝 INSTRUCTIONS:\r\n     * 1. แสดง confirmation dialog\r\n     *    - ใช้ window.confirm(`Are you sure you want to delete user \"${user.username}\"?`)\r\n     * 2. ถ้า user confirm (true):\r\n     *    - try { ... } catch { ... }\r\n     *    - เรียก await userAPI.deleteUser(userId)\r\n     *    - setSuccessMessage('User deleted successfully')\r\n     *    - await loadUsers() เพื่อ refresh list\r\n     * 3. ถ้า error:\r\n     *    - setError(err.message)\r\n     */\r\n    const handleDeleteUser = async (userId) => {\r\n        const user = users.find(u => u.id === userId);\r\n        if (!user) return;\r\n\r\n        const confirmed = window.confirm(`Are you sure you want to delete user \"${user.username}\"?`);\r\n        if (!confirmed) return;\r\n\r\n        try {\r\n            await userAPI.deleteUser(userId);\r\n            setSuccessMessage('User deleted successfully');\r\n            await loadUsers();\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\nconsole.log(\"🧩 Sending update:\", editedUser);\r\n    const handleSaveUser = async (userData) => {\r\n        try {\r\n            if (selectedUser) {\r\n                // Edit mode\r\n                await userAPI.updateUser(selectedUser.id, userData);\r\n                setSuccessMessage('User updated successfully');\r\n            } else {\r\n                // Create mode\r\n                await userAPI.createUser(userData);\r\n                setSuccessMessage('User created successfully');\r\n            }\r\n\r\n            setIsModalOpen(false);\r\n            await loadUsers();\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    return React.createElement('div', { className: 'user-management-page' },\r\n        // Header\r\n        React.createElement('div', { className: 'page-header' },\r\n            React.createElement('div', null,\r\n                React.createElement('h1', null, '👥 User Management'),\r\n                React.createElement('p', { className: 'page-subtitle' },\r\n                    `Logged in as: ${currentUser?.fullName} (${currentUser?.username})`\r\n                )\r\n            ),\r\n            React.createElement('div', { className: 'header-actions' },\r\n                React.createElement('button', {\r\n                    className: 'btn btn-primary',\r\n                    onClick: handleCreateUser\r\n                }, '+ Add New User'),\r\n                React.createElement('button', {\r\n                    className: 'btn btn-secondary',\r\n                    onClick: onLogout\r\n                }, '🚪 Logout')\r\n            )\r\n        ),\r\n\r\n        // Success message\r\n        successMessage && React.createElement('div', { className: 'alert alert-success' },\r\n            successMessage\r\n        ),\r\n\r\n        // Error message\r\n        error && React.createElement('div', { className: 'alert alert-error' }, error),\r\n\r\n        // Loading state\r\n        loading ?\r\n            React.createElement('div', { className: 'loading' }, '⏳ Loading users...') :\r\n            // User table\r\n            React.createElement(UserTable, {\r\n                users: users,\r\n                onEdit: handleEditUser,\r\n                onDelete: handleDeleteUser\r\n            }),\r\n\r\n        // User form modal\r\n        isModalOpen && React.createElement(UserFormModal, {\r\n            user: selectedUser,\r\n            onClose: () => setIsModalOpen(false),\r\n            onSave: handleSaveUser\r\n        })\r\n    );\r\n};\r\n\r\nexport default UserManagementPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}